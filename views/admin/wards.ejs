<html>
    <head>
        <title>Wards</title>
        <style>
           .main_content .main_content_iner {
  min-height: 68vh;
  transition: 0.5s;
  margin: 30px;
}
.container-fluid{
  width: 100%;
  padding-right: var(--bs-gutter-x, 0.75rem);
  padding-left: var(--bs-gutter-x, 0.75rem);
  margin-right: auto;
  margin-left: auto;
}
.plr_30 {
  padding: 0 30px !important;
}
.body_white_bg {
  background: #fff;
}
.pt_30 {
  padding-top: 30px !important;
}
.row {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--bs-gutter-y) * -1);
  margin-right: calc(var(--bs-gutter-x) * -0.5);
  margin-left: calc(var(--bs-gutter-x) * -0.5);
}
.row > * {
  flex-shrink: 0;
  width: 100%;
  max-width: 30%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-top: var(--bs-gutter-y);
}
.justify-content-center {
  justify-content: center !important;
}
.col-lg-6 {
    flex: 0 0 auto;
    width: 50%;
  }
  .white_box {
  padding: 30px;
  background-color: #4d4f5c26;
  -webkit-border-radius: 7px;
  -moz-border-radius: 7px;
  border-radius: 7px;
  /* width: inherit; */
}
.white_box.box_border {
  border: 1px solid rgba(202, 206, 213, 0.7);
}
.white_box .white_box_tittle h4 {
  font-size: 16px;
  font-weight: 500;
  margin-bottom: 0;
}
.mb_30 {
  margin-bottom: 30px !important;
}
.box_header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 25px;
  align-items: center;
}
.box_header .title_info p {
  font-size: 12px;
  font-weight: 400;
  margin-bottom: 0;
  color: #a3a0fb;
}
.chart_box_1 .box_header .box_header_left {
  flex-basis: 50%;
}
.chart_box_1 .box_header .box_header_left ul {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
.chart_box_1 .box_header .box_header_left ul li {
  display: inline-block;
  text-align: center;
}
.chart_box_1 .box_header .box_header_left ul li h4 {
  font-weight: 500;
  font-size: 18px;
  margin-bottom: 0;
}
.chart_box_1 .box_header .box_header_left ul li p {
  font-weight: 500;
  font-size: 12px;
  margin-bottom: 0;
}
.chart_box_1 .box_header .box_header_right .legend_circle ul li {
  color: #828bb2;
  font-size: 12px;
  font-weight: 400;
  margin-right: 30px;
  display: inline-block;
}
.chart_box_1 .box_header .box_header_right .legend_circle ul li:last-child {
  margin-right: 0;
}
.chart_box_1 .box_header .box_header_right .legend_circle ul li span {
  width: 10px;
  height: 10px;
  display: inline-block;
  border-radius: 50%;
  margin-right: 10px;
}
.main-title h3 {
  font-family: muli, sans-serif;
  font-weight: 700;
  font-size: 20px;
  color: #4d4f5c;
  line-height: 1.2;
}
.main-title span {
  font-size: 12px;
  font-weight: 400;
  color: #a3a0fb;
  display: block;
  margin-top: 6px;
}
.mb-0 {
  margin-bottom: 0 !important;
}
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 0.25rem;
}
.btn {
  display: inline-block;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  background-color: transparent;
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  border-radius: 0.25rem;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.btn:hover {
  color: #212529;
}
.btn-check:focus + .btn,
.btn:focus {
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}
.btn.disabled,
.btn:disabled,
fieldset:disabled .btn {
  pointer-events: none;
  opacity: 0.65;
}
.btn-primary {
  color: #fff;
  background-color: #0d6efd;
  border-color: #0d6efd;
}
.btn-primary:hover {
  color: #fff;
  background-color: #0b5ed7;
  border-color: #0a58ca;
}
.btn-check:focus + .btn-primary,
.btn-primary:focus {
  color: #fff;
  background-color: #0b5ed7;
  border-color: #0a58ca;
  box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);
}
.btn-check:active + .btn-primary,
.btn-check:checked + .btn-primary,
.btn-primary.active,
.btn-primary:active,
.show > .btn-primary.dropdown-toggle {
  color: #fff;
  background-color: #0a58ca;
  border-color: #0a53be;
}
.btn-check:active + .btn-primary:focus,
.btn-check:checked + .btn-primary:focus,
.btn-primary.active:focus,
.btn-primary:active:focus,
.show > .btn-primary.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.25rem rgba(49, 132, 253, 0.5);
}
.btn-primary.disabled,
.btn-primary:disabled {
  color: #fff;
  background-color: #0d6efd;
  border-color: #0d6efd;
}
.card-img,
.card-img-bottom,
.card-img-top {
  width: 100%;
}
.card-img,
.card-img-top {
  border-top-left-radius: calc(0.25rem - 1px);
  border-top-right-radius: calc(0.25rem - 1px);
}
.card-img,
.card-img-bottom {
  border-bottom-right-radius: calc(0.25rem - 1px);
  border-bottom-left-radius: calc(0.25rem - 1px);
}
.card-body {
  flex: 1 1 auto;
  padding: 1rem 1rem;
}

*,
::after,
::before {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: muli, sans-serif;
  font-size: 14px;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  background-color: #fff;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}
.modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 400px;
            text-align: center;
        }
        .modal-content .btn {
            margin: 10px;
        }

        </style>
    </head>
    <body>
      
      <div class="main_content_iner">
          <div class="container-fluid plr_30 body_white_bg pt_30">
              <div class="row justify-content-center" id="cards-container">
                  <!-- Cards will be inserted here dynamically -->
              </div>
          </div>
      </div>

      <div id="response"></div> <!-- Added to handle error messages -->

    <!-- Modal -->
    <div id="confirmationModal" class="modal">
        <div class="modal-content">
            <p>Are you sure you want to delete this card?</p>
            <button id="confirmDelete" class="btn btn-primary">Yes</button>
            <button id="cancelDelete" class="btn btn-secondary">No</button>
        </div>
    </div>
  </body>
  <script>
  async function displayResults() {
      try {
          const response = await fetch("/app/ward/read", {
              method: "GET",
          });
  
          if (!response.ok) {
              throw new Error("Network response was not ok " + response.statusText);
          }
  
          const result = await response.json();
          console.log(result);
          const cardsContainer = document.getElementById("cards-container");
  
          result.forEach(record => {
              const cardDiv = document.createElement("div");
              cardDiv.className = "col-lg-6";
              cardDiv.innerHTML = `
                  <div class="white_box mb_30">
                      <div class="box_header">
                          <div class="main-title">
                              <h3 class="mb-0">${record.wardName}</h3>
                          </div>
                      </div>
                      <div class="card" style="width: 18rem;">
                          <img src="${getImagePath(record.image)}" class="card-img-top" alt="...">
                          <div class="card-body">
                              <a href="#" class="btn btn-primary edit-btn" data-id="${record._id}">Edit</a>
                              <a href="#" class="btn btn-primary delete-btn" data-id="${record._id}">Delete</a>
                          </div>
                      </div>
                  </div>`;
              cardsContainer.appendChild(cardDiv);
          });

            // Add event listeners to the delete buttons
            document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                const cardId = this.getAttribute('data-id');
                showConfirmationModal(cardId);
            });
        });

        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', function(event) {
                event.preventDefault();
                const cardId = this.getAttribute('data-id');
                localStorage.setItem('wardId', cardId);
                window.location.href = '/admin/editWard.ejs';
            });
        });


      } catch (error) {
          console.error("Error:", error);
          document.getElementById("response").innerText = "Error: " + error.message;
      }
  }
  function getImagePath(image) {
    if (image) {
        // Adjust the path according to your server's configuration
        return image.replace("../../Church_portal/public/", "/");
    }
    return ""; // Return an empty string if the image is null or undefined
}

function showConfirmationModal(cardId) {
    const modal = document.getElementById("confirmationModal");
    modal.style.display = "block";

    const confirmButton = document.getElementById("confirmDelete");
    const cancelButton = document.getElementById("cancelDelete");

    // Remove any existing event listeners
    confirmButton.replaceWith(confirmButton.cloneNode(true));
    cancelButton.replaceWith(cancelButton.cloneNode(true));

    document.getElementById("confirmDelete").addEventListener("click", async function() {
        await deleteCard(cardId);
        modal.style.display = "none";
    });

    document.getElementById("cancelDelete").addEventListener("click", function() {
        modal.style.display = "none";
    });
}

async function deleteCard(cardId) {
  const token = localStorage.getItem('token');
  if (!token) {
        alert('Please login first');
        return;
      }

      try {
        const response = await fetch(`/app/ward/delete/${cardId}`, {
          method: 'DELETE',
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });

        if (!response.ok) {
            throw new Error("Network response was not ok " + response.statusText);
        }

        // Remove the card from the DOM
        document.querySelector(`[data-id='${cardId}']`).closest('.col-lg-6').remove();

    } catch (error) {
        console.error("Error:", error);
        const responseElement = document.getElementById("response");
        if (responseElement) {
            responseElement.innerText = "Error: " + error.message;
        }
    }
}
  displayResults();
  </script>
</html>